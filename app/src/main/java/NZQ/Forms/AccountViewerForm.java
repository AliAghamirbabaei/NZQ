/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package NZQ.Forms;

import ViewModel.AccountManager;
import java.awt.ComponentOrientation;
import javax.swing.JLabel;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableModel;

/**
 *
 * @author muhamadtalebi
 */
public class AccountViewerForm extends javax.swing.JFrame implements TableModel {

    private AccountManager accountManager;

    /**
     * Creates new form AccountViewerForm
     */
    public AccountViewerForm(AccountManager accountManager) {
        initComponents();
        this.accountManager = accountManager;
        accountInforamtionTable.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(accountInformationLabel.RIGHT);
        accountInforamtionTable.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
        accountInforamtionTable.setModel(this);
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        accountInforamtionTable = new javax.swing.JTable();
        accountInformationLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        accountInforamtionTable.setFont(new java.awt.Font("IRANSansFaNum", 0, 13)); // NOI18N
        accountInforamtionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ایمیل", "آدرس", "شماره تماس", "کد ملی", "نام صاحب حساب", "شناسه"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        accountInforamtionTable.setCellSelectionEnabled(true);
        accountInforamtionTable.setShowGrid(true);
        jScrollPane1.setViewportView(accountInforamtionTable);
        if (accountInforamtionTable.getColumnModel().getColumnCount() > 0) {
            accountInforamtionTable.getColumnModel().getColumn(0).setHeaderValue("ایمیل");
            accountInforamtionTable.getColumnModel().getColumn(1).setHeaderValue("آدرس");
            accountInforamtionTable.getColumnModel().getColumn(2).setHeaderValue("شماره تماس");
            accountInforamtionTable.getColumnModel().getColumn(3).setHeaderValue("کد ملی");
            accountInforamtionTable.getColumnModel().getColumn(4).setHeaderValue("نام صاحب حساب");
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 689, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
        );

        accountInformationLabel.setFont(new java.awt.Font("IRANSansX", 1, 18)); // NOI18N
        accountInformationLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        accountInformationLabel.setText("اطلاعات حساب ها");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(accountInformationLabel)
                .addGap(275, 275, 275))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(accountInformationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccountViewerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccountViewerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccountViewerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccountViewerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AccountManager accountManager = new AccountManager();
                new AccountViewerForm(accountManager).setVisible(true);
            }
        });
    }

    public boolean isCellEditable(int row, int col) {
        return switch (col) {
            case 0 -> false;
            case 1 -> true;
            case 2 -> true;
            case 3 -> true;
            case 4 -> true;
            case 5 -> true;
            default -> false;
        };
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable accountInforamtionTable;
    private javax.swing.JLabel accountInformationLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public int getRowCount() {
        return accountManager.accounts.size();
    }

    @Override
    public int getColumnCount() {
        return 6;
    }

    @Override
    public String getColumnName(int columnIndex) {
        return switch (columnIndex) {
            case 0 -> "شناسه";
            case 1 -> "نام";
            case 2 -> "کد ملی";
            case 3 -> "آدرس";
            case 4 -> "تلفن";
            case 5 -> "ایمیل";
            default -> "";
        };
    }

    @Override
    public Class<?> getColumnClass(int columnIndex) {
        return switch (columnIndex) {
            case 0 -> Integer.class;
            case 1 -> String.class;
            case 2 -> String.class;
            case 3 -> String.class;
            case 4 -> String.class;
            case 5 -> String.class;
            default -> String.class;
        };
    }

    @Override
    public Object getValueAt(int rowIndex, int columnIndex) {
        return switch (columnIndex) {
            case 0 -> accountManager.accounts.get(rowIndex).getId();
            case 1 -> accountManager.accounts.get(rowIndex).getName();
            case 2 -> accountManager.accounts.get(rowIndex).getNationalCode();
            case 3 -> accountManager.accounts.get(rowIndex).getAddress();
            case 4 -> accountManager.accounts.get(rowIndex).getTell();
            case 5 -> accountManager.accounts.get(rowIndex).getEmail();
            default -> "";
        };
    }

    @Override
    public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
        switch (columnIndex) {
            case 0 -> accountManager.accounts.get(rowIndex).setId((int) aValue);
            case 1 -> accountManager.accounts.get(rowIndex).setName(String.valueOf(aValue));
            case 2 -> accountManager.accounts.get(rowIndex).setNationalCode(String.valueOf(aValue));
            case 3 -> accountManager.accounts.get(rowIndex).setAddress(String.valueOf(aValue));
            case 4 -> accountManager.accounts.get(rowIndex).setTell(String.valueOf(aValue));
            case 5 -> accountManager.accounts.get(rowIndex).setEmail(String.valueOf(aValue));
        }
        accountManager.save();
    }

    @Override
    public void addTableModelListener(TableModelListener l) {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void removeTableModelListener(TableModelListener l) {
       // throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

}
