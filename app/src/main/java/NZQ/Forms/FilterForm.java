/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package NZQ.Forms;

import Model.Account;
import Model.Transaction.Paid;
import Model.Transaction.PrePaid;
import Model.Transaction.TransactionType;
import ViewModel.AccountManager;
import ViewModel.Report.TransactionFilter;
import ViewModel.Transaction.PaidManager;
import ViewModel.Transaction.PrePaidManager;
import java.awt.ComponentOrientation;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;

/**
 *
 * @author muhamadtalebi
 */
public class FilterForm extends javax.swing.JFrame {

    private AccountManager accountManager;
    private PaidManager paidManager;
    private PrePaidManager prePaidManager;
    private ArrayList<Paid> paids;
    private ArrayList<PrePaid> prePaids;
    private static final Pattern VALID_DATE_REGEX = Pattern.compile("[۰-۹0-9]{4}");
    private static final Pattern VALID_PRICE_REGEX = Pattern.compile("[0-9]+");

    /**
     * Creates new form DateFilterTarazNameh
     */
    public FilterForm(AccountManager accountManager, PaidManager paidManager, PrePaidManager prePaidManager) {
        this.accountManager = accountManager;
        this.paidManager = paidManager;
        this.prePaidManager = prePaidManager;
        initComponents();
        dailyButton.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        monthlyButton.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        yearlyButton.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        dateValidationErrorLabel.setVisible(false);

        dailyButton.setEnabled(false);
        monthlyButton.setEnabled(false);
        yearlyButton.setEnabled(false);
        fromMonthTextField.setEnabled(false);
        fromYearTextField.setEnabled(false);
        toYearTextField.setEnabled(false);
        toMonthTextField.setEnabled(false);

        fromPriceTextField.setEnabled(false);
        toPriceTextField.setEnabled(false);

        debtRadioButton.setEnabled(false);
        creditRadioButton.setEnabled(false);

        accountNameComboBox.setEnabled(false);
        
        initAccountNames();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateButtonGroup = new javax.swing.ButtonGroup();
        filterTypeButtonGroup = new javax.swing.ButtonGroup();
        transactionTypeButtonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        filterTarikhHeaderLabel = new javax.swing.JLabel();
        filterApply = new javax.swing.JButton();
        dateValidationErrorLabel = new javax.swing.JLabel();
        dateFilterPanel = new javax.swing.JPanel();
        fromYearTextField = new javax.swing.JTextField();
        placeHolderDate1 = new javax.swing.JLabel();
        taarikhLabel = new javax.swing.JLabel();
        dailyButton = new javax.swing.JRadioButton();
        monthlyButton = new javax.swing.JRadioButton();
        yearlyButton = new javax.swing.JRadioButton();
        toYearTextField = new javax.swing.JTextField();
        placeHolderDate2 = new javax.swing.JLabel();
        taarikhLabel1 = new javax.swing.JLabel();
        placeHolderDate3 = new javax.swing.JLabel();
        placeHolderDate4 = new javax.swing.JLabel();
        fromDayTextField = new javax.swing.JTextField();
        fromMonthTextField = new javax.swing.JTextField();
        toDayTextField = new javax.swing.JTextField();
        toMonthTextField = new javax.swing.JTextField();
        priceFilterPanel = new javax.swing.JPanel();
        debtRadioButton = new javax.swing.JRadioButton();
        creditRadioButton = new javax.swing.JRadioButton();
        dateFilterRadioButton = new javax.swing.JRadioButton();
        transactionTypeRadioButton = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        fromPriceLabel = new javax.swing.JLabel();
        toPriceLabel = new javax.swing.JLabel();
        fromPriceTextField = new javax.swing.JTextField();
        toPriceTextField = new javax.swing.JTextField();
        priceFilterRadioButton = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        accountNameComboBox = new javax.swing.JComboBox<>();
        accountFilterRadioButton = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        filterTarikhHeaderLabel.setFont(new java.awt.Font("IRANSansX", 1, 24)); // NOI18N
        filterTarikhHeaderLabel.setText("اعمال فیلتر");

        filterApply.setFont(new java.awt.Font("IRANSansX", 1, 13)); // NOI18N
        filterApply.setText("اعمال و نمایش");
        filterApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterApplyActionPerformed(evt);
            }
        });

        dateValidationErrorLabel.setFont(new java.awt.Font("IRANSansX", 0, 13)); // NOI18N
        dateValidationErrorLabel.setForeground(new java.awt.Color(250, 0, 0));
        dateValidationErrorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dateValidationErrorLabel.setText("date validation!");

        fromYearTextField.setFont(new java.awt.Font("IRANSansX", 0, 13)); // NOI18N
        fromYearTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        placeHolderDate1.setFont(new java.awt.Font("IRANSansX", 0, 14)); // NOI18N
        placeHolderDate1.setText("/");

        taarikhLabel.setFont(new java.awt.Font("IRANSansX", 0, 13)); // NOI18N
        taarikhLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        taarikhLabel.setText("از تاریخ:");

        dateButtonGroup.add(dailyButton);
        dailyButton.setFont(new java.awt.Font("IRANSansX", 0, 13)); // NOI18N
        dailyButton.setSelected(true);
        dailyButton.setText("روزانه");
        dailyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailyButtonActionPerformed(evt);
            }
        });

        dateButtonGroup.add(monthlyButton);
        monthlyButton.setFont(new java.awt.Font("IRANSansX", 0, 13)); // NOI18N
        monthlyButton.setText("ماهانه");
        monthlyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthlyButtonActionPerformed(evt);
            }
        });

        dateButtonGroup.add(yearlyButton);
        yearlyButton.setFont(new java.awt.Font("IRANSansX", 0, 13)); // NOI18N
        yearlyButton.setText("سالانه");
        yearlyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearlyButtonActionPerformed(evt);
            }
        });

        toYearTextField.setFont(new java.awt.Font("IRANSansX", 0, 13)); // NOI18N
        toYearTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        placeHolderDate2.setFont(new java.awt.Font("IRANSansX", 0, 14)); // NOI18N
        placeHolderDate2.setText("/");

        taarikhLabel1.setFont(new java.awt.Font("IRANSansX", 0, 13)); // NOI18N
        taarikhLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        taarikhLabel1.setText(" تا تاریخ:");

        placeHolderDate3.setFont(new java.awt.Font("IRANSansX", 0, 14)); // NOI18N
        placeHolderDate3.setText("/");

        placeHolderDate4.setFont(new java.awt.Font("IRANSansX", 0, 14)); // NOI18N
        placeHolderDate4.setText("/");

        fromDayTextField.setFont(new java.awt.Font("IRANSansX", 0, 13)); // NOI18N

        fromMonthTextField.setFont(new java.awt.Font("IRANSansX", 0, 13)); // NOI18N

        toDayTextField.setFont(new java.awt.Font("IRANSansX", 0, 13)); // NOI18N

        toMonthTextField.setFont(new java.awt.Font("IRANSansX", 0, 13)); // NOI18N

        javax.swing.GroupLayout dateFilterPanelLayout = new javax.swing.GroupLayout(dateFilterPanel);
        dateFilterPanel.setLayout(dateFilterPanelLayout);
        dateFilterPanelLayout.setHorizontalGroup(
            dateFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateFilterPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(dateFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dateFilterPanelLayout.createSequentialGroup()
                        .addComponent(yearlyButton)
                        .addGap(20, 20, 20)
                        .addComponent(monthlyButton)
                        .addGap(26, 26, 26)
                        .addComponent(dailyButton)
                        .addGap(49, 49, 49))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dateFilterPanelLayout.createSequentialGroup()
                        .addGroup(dateFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dateFilterPanelLayout.createSequentialGroup()
                                .addComponent(toYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(placeHolderDate2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(toMonthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(placeHolderDate4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(toDayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dateFilterPanelLayout.createSequentialGroup()
                                .addComponent(fromYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(placeHolderDate1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fromMonthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(placeHolderDate3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fromDayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(taarikhLabel)
                        .addContainerGap())
                    .addComponent(taarikhLabel1, javax.swing.GroupLayout.Alignment.TRAILING)))
        );
        dateFilterPanelLayout.setVerticalGroup(
            dateFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateFilterPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(dateFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monthlyButton)
                    .addComponent(dailyButton)
                    .addComponent(yearlyButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dateFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fromDayTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dateFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(taarikhLabel)
                        .addComponent(placeHolderDate1)
                        .addComponent(fromYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(fromMonthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(placeHolderDate3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dateFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(taarikhLabel1)
                    .addComponent(placeHolderDate2)
                    .addComponent(toYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(placeHolderDate4)
                    .addComponent(toDayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toMonthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        transactionTypeButtonGroup.add(debtRadioButton);
        debtRadioButton.setFont(new java.awt.Font("IRANSansX", 0, 13)); // NOI18N
        debtRadioButton.setText("بدهکار");

        transactionTypeButtonGroup.add(creditRadioButton);
        creditRadioButton.setFont(new java.awt.Font("IRANSansX", 0, 13)); // NOI18N
        creditRadioButton.setText("بستانکار");

        javax.swing.GroupLayout priceFilterPanelLayout = new javax.swing.GroupLayout(priceFilterPanel);
        priceFilterPanel.setLayout(priceFilterPanelLayout);
        priceFilterPanelLayout.setHorizontalGroup(
            priceFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, priceFilterPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(debtRadioButton)
                .addGap(18, 18, 18)
                .addComponent(creditRadioButton)
                .addGap(110, 110, 110))
        );
        priceFilterPanelLayout.setVerticalGroup(
            priceFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(priceFilterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(priceFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(debtRadioButton)
                    .addComponent(creditRadioButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        filterTypeButtonGroup.add(dateFilterRadioButton);
        dateFilterRadioButton.setFont(new java.awt.Font("IRANSansX", 1, 18)); // NOI18N
        dateFilterRadioButton.setText("فیلتر بر اساس تاریخ");
        dateFilterRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateFilterRadioButtonActionPerformed(evt);
            }
        });

        filterTypeButtonGroup.add(transactionTypeRadioButton);
        transactionTypeRadioButton.setFont(new java.awt.Font("IRANSansX", 1, 18)); // NOI18N
        transactionTypeRadioButton.setText("فیلتر بر اساس طرف حساب");
        transactionTypeRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transactionTypeRadioButtonActionPerformed(evt);
            }
        });

        fromPriceLabel.setFont(new java.awt.Font("IRANSansX", 0, 13)); // NOI18N
        fromPriceLabel.setText("از");

        toPriceLabel.setFont(new java.awt.Font("IRANSansX", 0, 13)); // NOI18N
        toPriceLabel.setText("تا");

        fromPriceTextField.setFont(new java.awt.Font("IRANSansX", 0, 13)); // NOI18N

        toPriceTextField.setFont(new java.awt.Font("IRANSansX", 0, 13)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fromPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(toPriceLabel)
                    .addComponent(fromPriceLabel))
                .addGap(107, 107, 107))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fromPriceLabel)
                    .addComponent(fromPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toPriceLabel)
                    .addComponent(toPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        filterTypeButtonGroup.add(priceFilterRadioButton);
        priceFilterRadioButton.setFont(new java.awt.Font("IRANSansX", 1, 18)); // NOI18N
        priceFilterRadioButton.setText("فیلتر بر اساس قیمت");
        priceFilterRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceFilterRadioButtonActionPerformed(evt);
            }
        });

        accountNameComboBox.setFont(new java.awt.Font("IRANSansX", 0, 13)); // NOI18N
        accountNameComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(accountNameComboBox, 0, 337, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(accountNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        filterTypeButtonGroup.add(accountFilterRadioButton);
        accountFilterRadioButton.setFont(new java.awt.Font("IRANSansX", 1, 18)); // NOI18N
        accountFilterRadioButton.setText("فیلتر بر اساس حساب");
        accountFilterRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountFilterRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dateValidationErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(transactionTypeRadioButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(priceFilterRadioButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(accountFilterRadioButton, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(dateFilterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(priceFilterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 22, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(dateFilterRadioButton)
                                .addContainerGap())
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(filterTarikhHeaderLabel)
                        .addGap(123, 123, 123))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(filterApply)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(filterTarikhHeaderLabel)
                .addGap(24, 24, 24)
                .addComponent(dateFilterRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateFilterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(transactionTypeRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(priceFilterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(priceFilterRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(accountFilterRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(filterApply, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(dateValidationErrorLabel)
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void filterApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterApplyActionPerformed
        TransactionFilter transactionFilter = new TransactionFilter(
                paidManager.paids,
                prePaidManager.prePaids);

        // Check what fillter type selected
        if (dateFilterRadioButton.isSelected()) {
            if (!isDateValid() && yearlyButton.isSelected()) {
                dateValidationErrorLabel.setText("تاریخ معتبر نیست!");
                dateValidationErrorLabel.setVisible(true);
            } else {
                // Presenting FilltredDataForm with date fillter
                if (yearlyButton.isSelected()) {
                    paids = transactionFilter.getYearlyPaidTransactions(Integer.parseInt(fromYearTextField.getText()), Integer.parseInt(toYearTextField.getText()));
                    prePaids = transactionFilter.getYearlyPrePaidTransactions(Integer.parseInt(fromYearTextField.getText()), Integer.parseInt(toYearTextField.getText()));
                } else if (monthlyButton.isSelected()) {
                    paids = transactionFilter.getMonthlyPaidTransactions(Integer.parseInt(fromYearTextField.getText()), Integer.parseInt(fromMonthTextField.getText()), Integer.parseInt(toMonthTextField.getText()));
                    prePaids = transactionFilter.getMonthlyPrePaidTransactions(Integer.parseInt(fromYearTextField.getText()), Integer.parseInt(fromMonthTextField.getText()), Integer.parseInt(toMonthTextField.getText()));
                } else if (dailyButton.isSelected()) {
                    paids = transactionFilter.getDailyPaidTransactions(Integer.parseInt(fromYearTextField.getText()), Integer.parseInt(fromMonthTextField.getText()), Integer.parseInt(fromDayTextField.getText()), Integer.parseInt(toDayTextField.getText()));
                    prePaids = transactionFilter.getDailyPrePaidTransactions(Integer.parseInt(fromYearTextField.getText()), Integer.parseInt(fromMonthTextField.getText()), Integer.parseInt(fromDayTextField.getText()), Integer.parseInt(toDayTextField.getText()));
                }
            }
        } else if (transactionTypeRadioButton.isSelected()) {
            // Presenting FilltredDataForm with transaction type fillter
            if (creditRadioButton.isSelected()) {
                paids = transactionFilter.getPaidTransactionsTypes(TransactionType.CREDIT);
                prePaids = transactionFilter.getPrePaidTransactionsTypes(TransactionType.CREDIT);
            } else if (debtRadioButton.isSelected()) {
                paids = transactionFilter.getPaidTransactionsTypes(TransactionType.DEBT);
                prePaids = transactionFilter.getPrePaidTransactionsTypes(TransactionType.DEBT);
            }
        } else if (priceFilterRadioButton.isSelected()) {
            // Presenting FilltredDataForm with price fillter
            if (!isPriceValid()) {
                dateValidationErrorLabel.setText("فیلدهای قیمت معتبر نیست!");
                dateValidationErrorLabel.setVisible(true);
            } else {
                paids = transactionFilter.getPaidTransactionsWithPriceRange(Integer.parseInt(fromPriceTextField.getText()), Integer.parseInt(toPriceTextField.getText()));
                prePaids = transactionFilter.getPrePaidTransactionsWithPriceRange(Integer.parseInt(fromPriceTextField.getText()), Integer.parseInt(toPriceTextField.getText()));
            }
        } else if (accountFilterRadioButton.isSelected()) {
            // Presenting FilltredDataForm with account id fillter
            paids = transactionFilter.getPaidTransactionOfAAccount(accountNameComboBox.getSelectedIndex());
            prePaids = transactionFilter.getPrePaidTransactionOfAAccount(accountNameComboBox.getSelectedIndex());
        }

        presentFillterForm(accountManager.accounts, paids, prePaids);
    }//GEN-LAST:event_filterApplyActionPerformed

    private void yearlyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearlyButtonActionPerformed
        fromMonthTextField.setEnabled(false);
        toMonthTextField.setEnabled(false);

        fromYearTextField.setEnabled(true);
        toYearTextField.setEnabled(true);
        toYearTextField.setVisible(true);
    }//GEN-LAST:event_yearlyButtonActionPerformed

    private void monthlyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthlyButtonActionPerformed
        fromMonthTextField.setEnabled(true);
        toMonthTextField.setEnabled(true);

        fromYearTextField.setEnabled(true);
        toYearTextField.setVisible(false);
    }//GEN-LAST:event_monthlyButtonActionPerformed

    private void dailyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailyButtonActionPerformed
        fromMonthTextField.setEnabled(false);
        toMonthTextField.setEnabled(false);
        fromYearTextField.setEnabled(false);
        toYearTextField.setEnabled(false);
    }//GEN-LAST:event_dailyButtonActionPerformed

    private void dateFilterRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateFilterRadioButtonActionPerformed
        dailyButton.setEnabled(true);
        monthlyButton.setEnabled(true);
        yearlyButton.setEnabled(true);
        //fromYearTextField.setEnabled(true);
        //toYearTextField.setEnabled(true);

        fromPriceTextField.setEnabled(false);
        toPriceTextField.setEnabled(false);

        debtRadioButton.setEnabled(false);
        creditRadioButton.setEnabled(false);

        accountNameComboBox.setEnabled(false);
    }//GEN-LAST:event_dateFilterRadioButtonActionPerformed

    private void transactionTypeRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transactionTypeRadioButtonActionPerformed
        dailyButton.setEnabled(false);
        monthlyButton.setEnabled(false);
        yearlyButton.setEnabled(false);
        fromMonthTextField.setEnabled(false);
        fromYearTextField.setEnabled(false);
        toMonthTextField.setEnabled(false);
        toYearTextField.setEnabled(false);

        fromPriceTextField.setEnabled(false);
        toPriceTextField.setEnabled(false);

        debtRadioButton.setEnabled(true);
        creditRadioButton.setEnabled(true);

        accountNameComboBox.setEnabled(false);
    }//GEN-LAST:event_transactionTypeRadioButtonActionPerformed

    private void priceFilterRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceFilterRadioButtonActionPerformed
        dailyButton.setEnabled(false);
        monthlyButton.setEnabled(false);
        yearlyButton.setEnabled(false);
        fromMonthTextField.setEnabled(false);
        fromYearTextField.setEnabled(false);
        toMonthTextField.setEnabled(false);
        toYearTextField.setEnabled(false);

        fromPriceTextField.setEnabled(true);
        toPriceTextField.setEnabled(true);

        debtRadioButton.setEnabled(false);
        creditRadioButton.setEnabled(false);

        accountNameComboBox.setEnabled(false);
    }//GEN-LAST:event_priceFilterRadioButtonActionPerformed

    private void accountFilterRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountFilterRadioButtonActionPerformed
        dailyButton.setEnabled(false);
        monthlyButton.setEnabled(false);
        yearlyButton.setEnabled(false);
        fromMonthTextField.setEnabled(false);
        fromYearTextField.setEnabled(false);
        toMonthTextField.setEnabled(false);
        toYearTextField.setEnabled(false);

        fromPriceTextField.setEnabled(false);
        toPriceTextField.setEnabled(false);

        debtRadioButton.setEnabled(false);
        creditRadioButton.setEnabled(false);

        accountNameComboBox.setEnabled(true);
    }//GEN-LAST:event_accountFilterRadioButtonActionPerformed

    private boolean isDateValid() {
        Matcher fromYearMathcher = VALID_DATE_REGEX.matcher(fromYearTextField.getText());
        Matcher toYearMathcher = VALID_DATE_REGEX.matcher(toYearTextField.getText());
        return fromYearMathcher.matches() && toYearMathcher.matches();
    }

    private boolean isPriceValid() {
        Matcher fromPriceMatcher = VALID_PRICE_REGEX.matcher(fromPriceTextField.getText());
        Matcher toPriceMathcher = VALID_PRICE_REGEX.matcher(toPriceTextField.getText());
        return fromPriceMatcher.matches() && toPriceMathcher.matches();
    }
    
    private void initAccountNames() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        accountNameComboBox.setModel(model);
        for (Account account : accountManager.accounts) {
            model.addElement(account.getName());
        }
    }

    private void presentFillterForm(ArrayList<Account> accounts, ArrayList<Paid> paids, ArrayList<PrePaid> prePaids) {
        FiltredDataFrom filtredDataFrom = new FiltredDataFrom(accounts, paids, prePaids);
        filtredDataFrom.setVisible(true);
        setVisible(false);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FilterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FilterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FilterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FilterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AccountManager accountManager = new AccountManager();
                PaidManager paidManager = new PaidManager();
                PrePaidManager prePaidManager = new PrePaidManager();

                new FilterForm(accountManager, paidManager, prePaidManager).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton accountFilterRadioButton;
    private javax.swing.JComboBox<String> accountNameComboBox;
    private javax.swing.JRadioButton creditRadioButton;
    private javax.swing.JRadioButton dailyButton;
    private javax.swing.ButtonGroup dateButtonGroup;
    private javax.swing.JPanel dateFilterPanel;
    private javax.swing.JRadioButton dateFilterRadioButton;
    private javax.swing.JLabel dateValidationErrorLabel;
    private javax.swing.JRadioButton debtRadioButton;
    private javax.swing.JButton filterApply;
    private javax.swing.JLabel filterTarikhHeaderLabel;
    private javax.swing.ButtonGroup filterTypeButtonGroup;
    private javax.swing.JTextField fromDayTextField;
    private javax.swing.JTextField fromMonthTextField;
    private javax.swing.JLabel fromPriceLabel;
    private javax.swing.JTextField fromPriceTextField;
    private javax.swing.JTextField fromYearTextField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JRadioButton monthlyButton;
    private javax.swing.JLabel placeHolderDate1;
    private javax.swing.JLabel placeHolderDate2;
    private javax.swing.JLabel placeHolderDate3;
    private javax.swing.JLabel placeHolderDate4;
    private javax.swing.JPanel priceFilterPanel;
    private javax.swing.JRadioButton priceFilterRadioButton;
    private javax.swing.JLabel taarikhLabel;
    private javax.swing.JLabel taarikhLabel1;
    private javax.swing.JTextField toDayTextField;
    private javax.swing.JTextField toMonthTextField;
    private javax.swing.JLabel toPriceLabel;
    private javax.swing.JTextField toPriceTextField;
    private javax.swing.JTextField toYearTextField;
    private javax.swing.ButtonGroup transactionTypeButtonGroup;
    private javax.swing.JRadioButton transactionTypeRadioButton;
    private javax.swing.JRadioButton yearlyButton;
    // End of variables declaration//GEN-END:variables
}
